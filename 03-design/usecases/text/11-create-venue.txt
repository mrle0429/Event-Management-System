@startuml
title Create Venue - Basic Course of Events

actor "Organiser/Administrator" as OA
boundary "Web Browser" as w
boundary "newView: View" as view
boundary "DispatchServlet" as d
entity "__model: Model__" as m
control ": __VenueSystem__" as System
entity "__venue: Venue__" as Venue
participant "VenueRepository" as repo
participant ": __VenueService__" as Service



== 1. User navigates to create venue page and enters venue details ==
OA -> w: Click "Create Venue"
activate w
w -> d: POST /createVenue (url: String, data: JSON)
activate d

note over d: The DispatchServlet handles request and\nparses data to generate VenueDTO

d -> System: createVenue(name: String, address: String, contact: String, totalCapacity: int, standingNum: int, seatingNum: int, preminumNum: int)
activate System

System -> Service: createVenue(name: String, address: String, contact: String, totalCapacity: int, standingNum: int, seatingNum: int, preminumNum: int)
activate Service

create Venue
Service -> Venue: Venue(name: String, address: String, contact: String, totalCapacity: int, standingNum: int, seatingNum: int, preminumNum: int)
activate Venue
Venue --> Service
deactivate Venue

Service -> repo: save(venue)


Service --> System: return Error.NONE
deactivate Service

System -> Service: getVenues()
activate Service
Service -> repo: findAll()

Service --> System: return venues
deactivate Service

System -> m: addAttribute("venueList": Srting, allVenues: Venue[*])

System --> d: return "venue_list_page"
deactivate System
create view
d -> view: View(model)
activate view
view --> d
deactivate view

d --> w: return newView
deactivate d


== 2. System displays updated venue list including the new venue ==
@enduml