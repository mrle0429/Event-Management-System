@startuml

title Delete Event - Basic Course of Events

actor "Admin" as admin
boundary "Web Browser" as web
boundary "newViewï¼šView" as nv
boundary ": DispatchServlet" as servlet
entity "m: Model" as model
control ": EventSystem" as es
participant ": EventRepository" as eventRepo
participant ": EventService" as eventService
entity "selected : Event" as selectedEvent


==1. The administrator performs the List Event page  **(01 - Manage Event Page)**\n2. The administrator selects the relevant event to delete ==
note over web, servlet: This part of the functionality is completed in JavaScript\nIt does not need to be shown here
==3. The system asks the user to confirm **(01 - Manage Event Page)** \n4. The administrator selects **"Yes"**(02 - Delete Event Confirm Page)==

admin->>web: click()
activate web

web->servlet: POST(url : String, payload : json)
activate servlet

servlet->es: deleteEvent(name : String, model : Model)
activate es

es->eventService: event := getEvent(eventName: String,eventDate: Date)

es->eventService: deleteEvent(event : Event)
activate eventService

eventService->eventRepo: delete(event : Event)
eventService->selectedEvent: <<destroy>>
destroy selectedEvent
eventService-->es:
deactivate eventService

es->es: fillModel(model : Model)
es-->model: addAttribute("events" : String, allEvents : Event[*])

es-->servlet: return "list-events"
deactivate es

create nv
servlet->nv: View(model : Model)
activate nv
nv-->servlet
deactivate nv
servlet-->web: return newView

deactivate servlet

==5. The system updates the display to show the existing Events **(01 - Manage Event Page)**==

@enduml
