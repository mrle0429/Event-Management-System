@startuml
title Update Venue - Refined Sequence Diagram

actor "Manager" as Manager
participant "Web Browser" as Browser
boundary "__view: ModifyVenuePage__" as View
control ": VenueSystem" as System
participant ": VenueRepository" as Repository
entity "selected : Venue" as Venue
entity "ta : TicketAvailability" as TA

== 1. The manager selects the edit venue functionality ==
note right of Manager: The manager interacts with the UI\n(selects venue to modify)

Manager -> Browser : interact
activate Browser

Browser -> System : POST(url: String, payload: json)
activate System

System -> Repository : venue := getVenueById(venueId)
activate Repository
Repository --> System : return venue
deactivate Repository

System -> View : renderModifyVenuePage(venue)
activate View
View --> System : return View
deactivate View

System --> Browser : render response
deactivate System


== 2. The manager modifies venue details and submits the changes ==
Manager -> Browser : interact


Browser -> System : POST(url: String, payload: json)
activate System

System -> Repository : venue := getVenueById(venueId)
activate Repository
Repository --> System : return venue
deactivate Repository

System -> Venue : updateDetails(newName, newAddress, newContactName, \nnewContactPhone, newContactEmail)


loop for each ticket type
  System -> TA : updateTicketAvailability(type, capacity)
end
deactivate Venue

System -> Repository : saveVenue(venue)
activate Repository
Repository --> System : success / error
deactivate Repository

System -> Repository : venue := getVenueById(venueId)
activate Repository
Repository --> System : return updated venue
deactivate Repository

System -> View : renderUpdatedVenuePage(venue)
activate View
View --> System : return View
deactivate View

System --> Browser : render response
deactivate System
deactivate Browser

== 3. The system displays the updated venue details ==
note right of Manager: The updated details are visible on the\n"View Venue" page.
@enduml
